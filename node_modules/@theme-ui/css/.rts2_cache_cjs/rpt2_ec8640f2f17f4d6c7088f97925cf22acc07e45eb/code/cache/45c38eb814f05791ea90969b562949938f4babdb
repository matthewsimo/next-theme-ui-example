{"code":"/**\r\n * Copied and adapted from @types/styled-system__css\r\n * https://github.com/DefinitelyTyped/DefinitelyTyped/blob/028c46f833ffbbb0328a28ae6177923998fcf0cc/types/styled-system__css/index.d.ts\r\n */\r\n//# sourceMappingURL=types.js.map","map":"{\"version\":3,\"file\":\"types.js\",\"sourceRoot\":\"\",\"sources\":[\"../../src/types.ts\"],\"names\":[],\"mappings\":\"AAAA;;;GAGG\"}","dts":{"name":"/Users/jackson/theme-ui/packages/css/types.d.ts","writeByteOrderMark":false,"text":"/**\r\n * Copied and adapted from @types/styled-system__css\r\n * https://github.com/DefinitelyTyped/DefinitelyTyped/blob/028c46f833ffbbb0328a28ae6177923998fcf0cc/types/styled-system__css/index.d.ts\r\n */\r\nimport * as CSS from 'csstype';\r\ndeclare type StandardCSSProperties = CSS.PropertiesFallback<number | string>;\r\n/**\r\n * The `css` function accepts arrays as values for mobile-first responsive styles.\r\n * Note that this extends to non-theme values also. For example `display=['none', 'block']`\r\n * will also works.\r\n *\r\n * For more information see: https://styled-system.com/responsive-styles\r\n */\r\nexport declare type ResponsiveStyleValue<T> = T | Array<T | null>;\r\n/**\r\n * All non-vendor-prefixed CSS properties. (Allow `number` to support CSS-in-JS libs,\r\n * since they are converted to pixels)\r\n */\r\nexport interface CSSProperties extends CSS.StandardProperties<number | string>, CSS.SvgProperties<number | string> {\r\n}\r\n/**\r\n * Map of all CSS pseudo selectors (`:hover`, `:focus`, ...)\r\n */\r\nexport declare type CSSPseudoSelectorProps = {\r\n    [K in CSS.Pseudos]?: SystemStyleObject;\r\n};\r\n/**\r\n * CSS as POJO that is compatible with CSS-in-JS libaries.\r\n * Copied directly from [emotion](https://github.com/emotion-js/emotion/blob/ca3ad1c1dcabf78a95b55cc2dc94cad1998a3196/packages/serialize/types/index.d.ts#L45) types\r\n */\r\nexport interface CSSObject extends CSSPropertiesWithMultiValues, CSSPseudosForCSSObject, CSSOthersObjectForCSSObject {\r\n}\r\ndeclare type CSSPropertiesWithMultiValues = {\r\n    [K in keyof CSSProperties]: CSSProperties[K];\r\n};\r\ndeclare type CSSPseudosForCSSObject = {\r\n    [K in CSS.Pseudos]?: CSSObject;\r\n};\r\ndeclare type CSSInterpolation = undefined | number | string | CSSObject;\r\ninterface CSSOthersObjectForCSSObject {\r\n    [propertiesName: string]: CSSInterpolation;\r\n}\r\n/**\r\n * Map all nested selectors\r\n */\r\nexport interface CSSSelectorObject {\r\n    [cssSelector: string]: SystemStyleObject;\r\n}\r\ninterface AliasesCSSProperties {\r\n    /**\r\n     * The **`background-color`** CSS property sets the background color of an element.\r\n     *\r\n     * **Initial value**: `transparent`\r\n     *\r\n     * | Chrome | Firefox | Safari |  Edge  |  IE   |\r\n     * | :----: | :-----: | :----: | :----: | :---: |\r\n     * | **1**  |  **1**  | **1**  | **12** | **4** |\r\n     *\r\n     * @see https://developer.mozilla.org/docs/Web/CSS/background-color\r\n     */\r\n    bg?: StandardCSSProperties['backgroundColor'];\r\n    /**\r\n     * The **`margin`** CSS property sets the margin area on all four sides of an element. It is a shorthand for `margin-top`, `margin-right`, `margin-bottom`, and `margin-left`.\r\n     *\r\n     * | Chrome | Firefox | Safari |  Edge  |  IE   |\r\n     * | :----: | :-----: | :----: | :----: | :---: |\r\n     * | **1**  |  **1**  | **1**  | **12** | **3** |\r\n     *\r\n     * @see https://developer.mozilla.org/docs/Web/CSS/margin\r\n     */\r\n    m?: StandardCSSProperties['margin'];\r\n    /**\r\n     * The **`margin-top`** CSS property sets the margin area on the top of an element. A positive value places it farther from its neighbors, while a negative value places it closer.\r\n     *\r\n     * **Initial value**: `0`\r\n     *\r\n     * | Chrome | Firefox | Safari |  Edge  |  IE   |\r\n     * | :----: | :-----: | :----: | :----: | :---: |\r\n     * | **1**  |  **1**  | **1**  | **12** | **3** |\r\n     *\r\n     * @see https://developer.mozilla.org/docs/Web/CSS/margin-top\r\n     */\r\n    mt?: StandardCSSProperties['marginTop'];\r\n    /**\r\n     * The **`margin-right`** CSS property sets the margin area on the right side of an element. A positive value places it farther from its neighbors, while a negative value places it closer.\r\n     *\r\n     * **Initial value**: `0`\r\n     *\r\n     * | Chrome | Firefox | Safari |  Edge  |  IE   |\r\n     * | :----: | :-----: | :----: | :----: | :---: |\r\n     * | **1**  |  **1**  | **1**  | **12** | **3** |\r\n     *\r\n     * @see https://developer.mozilla.org/docs/Web/CSS/margin-right\r\n     */\r\n    mr?: StandardCSSProperties['marginRight'];\r\n    /**\r\n     * The **`margin-bottom`** CSS property sets the margin area on the bottom of an element. A positive value places it farther from its neighbors, while a negative value places it closer.\r\n     *\r\n     * **Initial value**: `0`\r\n     *\r\n     * | Chrome | Firefox | Safari |  Edge  |  IE   |\r\n     * | :----: | :-----: | :----: | :----: | :---: |\r\n     * | **1**  |  **1**  | **1**  | **12** | **3** |\r\n     *\r\n     * @see https://developer.mozilla.org/docs/Web/CSS/margin-bottom\r\n     */\r\n    mb?: StandardCSSProperties['marginBottom'];\r\n    /**\r\n     * The **`margin-left`** CSS property sets the margin area on the left side of an element. A positive value places it farther from its neighbors, while a negative value places it closer.\r\n     *\r\n     * **Initial value**: `0`\r\n     *\r\n     * | Chrome | Firefox | Safari |  Edge  |  IE   |\r\n     * | :----: | :-----: | :----: | :----: | :---: |\r\n     * | **1**  |  **1**  | **1**  | **12** | **3** |\r\n     *\r\n     * @see https://developer.mozilla.org/docs/Web/CSS/margin-left\r\n     */\r\n    ml?: StandardCSSProperties['marginLeft'];\r\n    /**\r\n     * The **`mx`** is shorthand for using both **`margin-left`** and **`margin-right`** CSS properties. They set the margin area on the left and right side of an element. A positive value placesit\r\n     * farther from its neighbors, while a negative value places it closer.\r\n     *\r\n     * **Initial value**: `0`\r\n     *\r\n     * | Chrome | Firefox | Safari |  Edge  |  IE   |\r\n     * | :----: | :-----: | :----: | :----: | :---: |\r\n     * | **1**  |  **1**  | **1**  | **12** | **3** |\r\n     *\r\n     * @see https://styled-system.com/#margin-props\r\n     * @see https://developer.mozilla.org/docs/Web/CSS/margin-left\r\n     * @see https://developer.mozilla.org/docs/Web/CSS/margin-right\r\n     */\r\n    mx?: StandardCSSProperties['marginLeft'];\r\n    /**\r\n     * The **`marginX`** is shorthand for using both **`margin-left`** and **`margin-right`** CSS properties. They set the margin area on the left and right side of an element. A positive value\r\n     * places it farther from its neighbors, while a negative value places it closer.\r\n     *\r\n     * **Initial value**: `0`\r\n     *\r\n     * | Chrome | Firefox | Safari |  Edge  |  IE   |\r\n     * | :----: | :-----: | :----: | :----: | :---: |\r\n     * | **1**  |  **1**  | **1**  | **12** | **3** |\r\n     *\r\n     * @see https://styled-system.com/#margin-props\r\n     * @see https://developer.mozilla.org/docs/Web/CSS/margin-left\r\n     * @see https://developer.mozilla.org/docs/Web/CSS/margin-right\r\n     */\r\n    marginX?: StandardCSSProperties['marginLeft'];\r\n    /**\r\n     * The **`my`** is shorthard for using both **`margin-top`** and **`margin-bottom`** CSS properties. They set the margin area on the top and bottom of an element. A positive value places it\r\n     * farther from its neighbors, while a negative value places it closer.\r\n     *\r\n     * **Initial value**: `0`\r\n     *\r\n     * | Chrome | Firefox | Safari |  Edge  |  IE   |\r\n     * | :----: | :-----: | :----: | :----: | :---: |\r\n     * | **1**  |  **1**  | **1**  | **12** | **3** |\r\n     *\r\n     * @see https://styled-system.com/#margin-props\r\n     * @see https://developer.mozilla.org/docs/Web/CSS/margin-top\r\n     * @see https://developer.mozilla.org/docs/Web/CSS/margin-bottom\r\n     */\r\n    my?: StandardCSSProperties['marginTop'];\r\n    /**\r\n     * The **`marginY`** is shorthard for using both **`margin-top`** and **`margin-bottom`** CSS properties. They set the margin area on the top and bottom of an element. A positive value places\r\n     * it farther from its neighbors, while a negative value places it closer.\r\n     *\r\n     * **Initial value**: `0`\r\n     *\r\n     * | Chrome | Firefox | Safari |  Edge  |  IE   |\r\n     * | :----: | :-----: | :----: | :----: | :---: |\r\n     * | **1**  |  **1**  | **1**  | **12** | **3** |\r\n     *\r\n     * @see https://styled-system.com/#margin-props\r\n     * @see https://developer.mozilla.org/docs/Web/CSS/margin-top\r\n     * @see https://developer.mozilla.org/docs/Web/CSS/margin-bottom\r\n     */\r\n    marginY?: StandardCSSProperties['marginTop'];\r\n    /**\r\n     * The **`padding`** CSS property sets the padding area on all four sides of an element. It is a shorthand for `padding-top`, `padding-right`, `padding-bottom`, and `padding-left`.\r\n     *\r\n     * | Chrome | Firefox | Safari |  Edge  |  IE   |\r\n     * | :----: | :-----: | :----: | :----: | :---: |\r\n     * | **1**  |  **1**  | **1**  | **12** | **4** |\r\n     *\r\n     * @see https://developer.mozilla.org/docs/Web/CSS/padding\r\n     */\r\n    p?: StandardCSSProperties['padding'];\r\n    /**\r\n     * The **`padding-top`** padding area on the top of an element.\r\n     *\r\n     * **Initial value**: `0`\r\n     *\r\n     * | Chrome | Firefox | Safari |  Edge  |  IE   |\r\n     * | :----: | :-----: | :----: | :----: | :---: |\r\n     * | **1**  |  **1**  | **1**  | **12** | **4** |\r\n     *\r\n     * @see https://developer.mozilla.org/docs/Web/CSS/padding-top\r\n     */\r\n    pt?: StandardCSSProperties['paddingTop'];\r\n    /**\r\n     * The **`padding-right`** CSS property sets the width of the padding area on the right side of an element.\r\n     *\r\n     * **Initial value**: `0`\r\n     *\r\n     * | Chrome | Firefox | Safari |  Edge  |  IE   |\r\n     * | :----: | :-----: | :----: | :----: | :---: |\r\n     * | **1**  |  **1**  | **1**  | **12** | **4** |\r\n     *\r\n     * @see https://developer.mozilla.org/docs/Web/CSS/padding-right\r\n     */\r\n    pr?: StandardCSSProperties['paddingRight'];\r\n    /**\r\n     * The **`padding-bottom`** CSS property sets the height of the padding area on the bottom of an element.\r\n     *\r\n     * **Initial value**: `0`\r\n     *\r\n     * | Chrome | Firefox | Safari |  Edge  |  IE   |\r\n     * | :----: | :-----: | :----: | :----: | :---: |\r\n     * | **1**  |  **1**  | **1**  | **12** | **4** |\r\n     *\r\n     * @see https://developer.mozilla.org/docs/Web/CSS/padding-bottom\r\n     */\r\n    pb?: StandardCSSProperties['paddingBottom'];\r\n    /**\r\n     * The **`padding-left`** CSS property sets the width of the padding area on the left side of an element.\r\n     *\r\n     * **Initial value**: `0`\r\n     *\r\n     * | Chrome | Firefox | Safari |  Edge  |  IE   |\r\n     * | :----: | :-----: | :----: | :----: | :---: |\r\n     * | **1**  |  **1**  | **1**  | **12** | **4** |\r\n     *\r\n     * @see https://developer.mozilla.org/docs/Web/CSS/padding-left\r\n     */\r\n    pl?: StandardCSSProperties['paddingLeft'];\r\n    /**\r\n     * The **`px`** is shorthand property for CSS properties **`padding-left`** and **`padding-right`**. They set the width of the padding area on the left and right side of an element.\r\n     *\r\n     * **Initial value**: `0`\r\n     *\r\n     * | Chrome | Firefox | Safari |  Edge  |  IE   |\r\n     * | :----: | :-----: | :----: | :----: | :---: |\r\n     * | **1**  |  **1**  | **1**  | **12** | **4** |\r\n     *\r\n     * @see https://styled-system.com/#padding-props\r\n     * @see https://developer.mozilla.org/docs/Web/CSS/padding-left\r\n     * @see https://developer.mozilla.org/docs/Web/CSS/padding-right\r\n     */\r\n    px?: StandardCSSProperties['paddingLeft'];\r\n    /**\r\n     * The **`paddingX`** is shorthand property for CSS properties **`padding-left`** and **`padding-right`**. They set the width of the padding area on the left and right side of an element.\r\n     *\r\n     * **Initial value**: `0`\r\n     *\r\n     * | Chrome | Firefox | Safari |  Edge  |  IE   |\r\n     * | :----: | :-----: | :----: | :----: | :---: |\r\n     * | **1**  |  **1**  | **1**  | **12** | **4** |\r\n     *\r\n     * @see https://styled-system.com/#padding-props\r\n     * @see https://developer.mozilla.org/docs/Web/CSS/padding-left\r\n     * @see https://developer.mozilla.org/docs/Web/CSS/padding-right\r\n     */\r\n    paddingX?: StandardCSSProperties['paddingLeft'];\r\n    /**\r\n     * The **`py`** is shorthand property for CSS properties **`padding-top`** and **`padding-bottom`**. They set the width of the padding area on the top and bottom of an element.\r\n     *\r\n     * **Initial value**: `0`\r\n     *\r\n     * | Chrome | Firefox | Safari |  Edge  |  IE   |\r\n     * | :----: | :-----: | :----: | :----: | :---: |\r\n     * | **1**  |  **1**  | **1**  | **12** | **4** |\r\n     *\r\n     * @see https://styled-system.com/#padding-props\r\n     * @see https://developer.mozilla.org/docs/Web/CSS/padding-top\r\n     * @see https://developer.mozilla.org/docs/Web/CSS/padding-bottom\r\n     */\r\n    py?: StandardCSSProperties['paddingTop'];\r\n    /**\r\n     * The **`paddingY`** is shorthand property for CSS properties **`padding-top`** and **`padding-bottom`**. They set the width of the padding area on the top and bottom of an element.\r\n     *\r\n     * **Initial value**: `0`\r\n     *\r\n     * | Chrome | Firefox | Safari |  Edge  |  IE   |\r\n     * | :----: | :-----: | :----: | :----: | :---: |\r\n     * | **1**  |  **1**  | **1**  | **12** | **4** |\r\n     *\r\n     * @see https://styled-system.com/#padding-props\r\n     * @see https://developer.mozilla.org/docs/Web/CSS/padding-top\r\n     * @see https://developer.mozilla.org/docs/Web/CSS/padding-bottom\r\n     */\r\n    paddingY?: StandardCSSProperties['paddingTop'];\r\n    /**\r\n     * The **`size`** is a shorthand property for CSS properties **`width`** and **`height`**.\r\n     *\r\n     * @see https://theme-ui.com/sx-prop#theme-aware-properties\r\n     * @see https://developer.mozilla.org/docs/Web/CSS/width\r\n     * @see https://developer.mozilla.org/docs/Web/CSS/height\r\n     */\r\n    size?: StandardCSSProperties['width'];\r\n}\r\ninterface OverwriteCSSProperties {\r\n    /**\r\n     * The **`box-shadow`** CSS property adds shadow effects around an element's frame. You can set multiple effects separated by commas. A box shadow is described by X and Y offsets relative to the\r\n     * element, blur and spread radii, and color.\r\n     *\r\n     * **Initial value**: `none`\r\n     *\r\n     * | Chrome  | Firefox | Safari  |  Edge  |  IE   |\r\n     * | :-----: | :-----: | :-----: | :----: | :---: |\r\n     * | **10**  |  **4**  | **5.1** | **12** | **9** |\r\n     * | 1 _-x-_ |         | 3 _-x-_ |        |       |\r\n     *\r\n     * @see https://developer.mozilla.org/docs/Web/CSS/box-shadow\r\n     */\r\n    boxShadow?: CSS.BoxShadowProperty | number;\r\n    /**\r\n     * The **`font-weight`** CSS property specifies the weight (or boldness) of the font. The font weights available to you will depend on the `font-family` you are using. Some fonts are only\r\n     * available in `normal` and `bold`.\r\n     *\r\n     * **Initial value**: `normal`\r\n     *\r\n     * | Chrome | Firefox | Safari |  Edge  |  IE   |\r\n     * | :----: | :-----: | :----: | :----: | :---: |\r\n     * | **2**  |  **1**  | **1**  | **12** | **3** |\r\n     *\r\n     * @see https://developer.mozilla.org/docs/Web/CSS/font-weight\r\n     */\r\n    fontWeight?: CSS.FontWeightProperty | string;\r\n    /**\r\n     * The **`border-top-style`** CSS property sets the line style of an element's top `border`.\r\n     *\r\n     * **Initial value**: `none`\r\n     *\r\n     * | Chrome | Firefox | Safari |  Edge  |   IE    |\r\n     * | :----: | :-----: | :----: | :----: | :-----: |\r\n     * | **1**  |  **1**  | **1**  | **12** | **5.5** |\r\n     *\r\n     * @see https://developer.mozilla.org/docs/Web/CSS/border-top-style\r\n     */\r\n    borderTopStyle?: CSS.BorderTopStyleProperty | string;\r\n    /**\r\n     * The **`border-top-width`** CSS property sets the width of the top border of an element.\r\n     *\r\n     * **Initial value**: `medium`\r\n     *\r\n     * | Chrome | Firefox | Safari |  Edge  |  IE   |\r\n     * | :----: | :-----: | :----: | :----: | :---: |\r\n     * | **1**  |  **1**  | **1**  | **12** | **4** |\r\n     *\r\n     * @see https://developer.mozilla.org/docs/Web/CSS/border-top-width\r\n     */\r\n    borderTopWidth?: CSS.BorderTopWidthProperty<never> | string;\r\n    /**\r\n     * The **`border-bottom-style`** CSS property sets the line style of an element's bottom `border`.\r\n     *\r\n     * **Initial value**: `none`\r\n     *\r\n     * | Chrome | Firefox | Safari |  Edge  |   IE    |\r\n     * | :----: | :-----: | :----: | :----: | :-----: |\r\n     * | **1**  |  **1**  | **1**  | **12** | **5.5** |\r\n     *\r\n     * @see https://developer.mozilla.org/docs/Web/CSS/border-bottom-style\r\n     */\r\n    borderBottomStyle?: CSS.BorderBottomStyleProperty | string;\r\n    /**\r\n     * The **`border-right-style`** CSS property sets the line style of an element's right `border`.\r\n     *\r\n     * **Initial value**: `none`\r\n     *\r\n     * | Chrome | Firefox | Safari |  Edge  |   IE    |\r\n     * | :----: | :-----: | :----: | :----: | :-----: |\r\n     * | **1**  |  **1**  | **1**  | **12** | **5.5** |\r\n     *\r\n     * @see https://developer.mozilla.org/docs/Web/CSS/border-right-style\r\n     */\r\n    borderRightStyle?: CSS.BorderRightStyleProperty | string;\r\n    /**\r\n     * The **`border-left-style`** CSS property sets the line style of an element's left `border`.\r\n     *\r\n     * **Initial value**: `none`\r\n     *\r\n     * | Chrome | Firefox | Safari |  Edge  |   IE    |\r\n     * | :----: | :-----: | :----: | :----: | :-----: |\r\n     * | **1**  |  **1**  | **1**  | **12** | **5.5** |\r\n     *\r\n     * @see https://developer.mozilla.org/docs/Web/CSS/border-left-style\r\n     */\r\n    borderLeftStyle?: CSS.BorderLeftStyleProperty | string;\r\n    /**\r\n     * The **`border-radius`** CSS property rounds the corners of an element's outer border edge. You can set a single radius to make circular corners, or two radii to make elliptical corners.\r\n     *\r\n     * | Chrome  | Firefox | Safari  |  Edge  |  IE   |\r\n     * | :-----: | :-----: | :-----: | :----: | :---: |\r\n     * |  **4**  |  **4**  |  **5**  | **12** | **9** |\r\n     * | 1 _-x-_ |         | 3 _-x-_ |        |       |\r\n     *\r\n     * @see https://developer.mozilla.org/docs/Web/CSS/border-radius\r\n     */\r\n    borderRadius?: CSS.BorderRadiusProperty<string | number>;\r\n    /**\r\n     * The **`z-index`** CSS property sets the z-order of a positioned element and its descendants or flex items. Overlapping elements with a larger z-index cover those with a smaller one.\r\n     *\r\n     * **Initial value**: `auto`\r\n     *\r\n     * | Chrome | Firefox | Safari |  Edge  |  IE   |\r\n     * | :----: | :-----: | :----: | :----: | :---: |\r\n     * | **1**  |  **1**  | **1**  | **12** | **4** |\r\n     *\r\n     * @see https://developer.mozilla.org/docs/Web/CSS/z-index\r\n     */\r\n    zIndex?: CSS.ZIndexProperty | string;\r\n}\r\n/**\r\n * Map of all available CSS properties (including aliases) and their raw value.\r\n * Only used internally to map CCS properties to input types (responsive value,\r\n * theme function or nested) in `SystemCssProperties`.\r\n */\r\ninterface AllSystemCSSProperties extends Omit<CSSProperties, keyof OverwriteCSSProperties>, AliasesCSSProperties, OverwriteCSSProperties {\r\n}\r\nexport declare type SystemCssProperties = {\r\n    [K in keyof AllSystemCSSProperties]: ResponsiveStyleValue<AllSystemCSSProperties[K]> | ((theme: any) => ResponsiveStyleValue<AllSystemCSSProperties[K]>) | SystemStyleObject;\r\n};\r\nexport interface VariantProperty {\r\n    /**\r\n     * **`Variants`** can be useful for applying complex styles to a component based on a single prop.\r\n     *\r\n     * @example\r\n     * const theme = {\r\n     *   buttons: {\r\n     *     primary: {\r\n     *       p: 3,\r\n     *       fontWeight: 'bold',\r\n     *       color: 'white',\r\n     *       bg: 'primary',\r\n     *       borderRadius: 2,\r\n     *     },\r\n     *   },\r\n     * }\r\n     * const result = css({\r\n     *   variant: 'buttons.primary',\r\n     * })(theme)\r\n     *\r\n     * @see https://styled-system.com/variants\r\n     */\r\n    variant: string;\r\n}\r\nexport interface UseThemeFunction {\r\n    (theme: any): Exclude<SystemStyleObject, UseThemeFunction>;\r\n}\r\n/**\r\n * The `SystemStyleObject` extends [style props](https://emotion.sh/docs/object-styles)\r\n * such that properties that are part of the `Theme` will be transformed to\r\n * their corresponding values. Other valid CSS properties are also allowed.\r\n */\r\nexport declare type SystemStyleObject = SystemCssProperties | CSSPseudoSelectorProps | CSSSelectorObject | VariantProperty | UseThemeFunction;\r\ndeclare type ObjectOrArray<T> = T[] | {\r\n    [K: string]: T | ObjectOrArray<T>;\r\n};\r\nexport declare type TLengthStyledSystem = string | 0 | number;\r\n/**\r\n * To use Theme UI color modes, color scales should include at least a text\r\n * and background color. These values are used in the ColorMode component to\r\n * set body foreground and background colors. Color modes should be defined as\r\n * nested objects within a theme.colors.modes object. Each key in this object\r\n * should correspond to a color mode name, where the name can be anything, but\r\n * typically light and dark are used for applications with a dark mode. The\r\n * initialColorModeName key is required to enable color modes and will be used as\r\n * the name for the root color palette.\r\n */\r\nexport declare type ColorMode = {\r\n    [k: string]: CSS.ColorProperty | ObjectOrArray<CSS.ColorProperty>;\r\n} & {\r\n    /**\r\n     * Body background color\r\n     */\r\n    background: CSS.ColorProperty;\r\n    /**\r\n     * Body foreground color\r\n     */\r\n    text: CSS.ColorProperty;\r\n    /**\r\n     * Primary brand color for links, buttons, etc.\r\n     */\r\n    primary?: CSS.ColorProperty;\r\n    /**\r\n     * A secondary brand color for alternative styling\r\n     */\r\n    secondary?: CSS.ColorProperty;\r\n    /**\r\n     * A faint color for backgrounds, borders, and accents that do not require\r\n     * high contrast with the background color\r\n     */\r\n    muted?: CSS.ColorProperty;\r\n    /**\r\n     * A contrast color for emphasizing UI\r\n     */\r\n    accent?: CSS.ColorProperty;\r\n};\r\nexport interface Theme {\r\n    breakpoints?: Array<string>;\r\n    mediaQueries?: {\r\n        [size: string]: string;\r\n    };\r\n    space?: ObjectOrArray<CSS.MarginProperty<number | string>>;\r\n    fontSizes?: ObjectOrArray<CSS.FontSizeProperty<number>>;\r\n    fonts?: ObjectOrArray<CSS.FontFamilyProperty>;\r\n    fontWeights?: ObjectOrArray<CSS.FontWeightProperty>;\r\n    lineHeights?: ObjectOrArray<CSS.LineHeightProperty<TLengthStyledSystem>>;\r\n    letterSpacings?: ObjectOrArray<CSS.LetterSpacingProperty<TLengthStyledSystem>>;\r\n    sizes?: ObjectOrArray<CSS.HeightProperty<{}> | CSS.WidthProperty<{}>>;\r\n    borders?: ObjectOrArray<CSS.BorderProperty<{}>>;\r\n    borderStyles?: ObjectOrArray<CSS.BorderProperty<{}>>;\r\n    borderWidths?: ObjectOrArray<CSS.BorderWidthProperty<TLengthStyledSystem>>;\r\n    radii?: ObjectOrArray<CSS.BorderRadiusProperty<TLengthStyledSystem>>;\r\n    shadows?: ObjectOrArray<CSS.BoxShadowProperty>;\r\n    zIndices?: ObjectOrArray<CSS.ZIndexProperty>;\r\n    buttons?: ObjectOrArray<SystemCssProperties>;\r\n    colorStyles?: ObjectOrArray<SystemCssProperties>;\r\n    textStyles?: ObjectOrArray<SystemCssProperties>;\r\n    text?: ObjectOrArray<SystemCssProperties>;\r\n    opacities?: ObjectOrArray<CSS.OpacityProperty>;\r\n    /**\r\n     * Enable/disable custom CSS properties/variables if lower browser\r\n     * support is required (for eg. IE 11).\r\n     *\r\n     * References: https://theme-ui.com/color-modes/#turn-off-custom-properties\r\n     */\r\n    useCustomProperties?: boolean;\r\n    /**\r\n     * Provide a value here to enable color modes\r\n     */\r\n    initialColorModeName?: string;\r\n    /**\r\n     * Adds styles defined in theme.styles.root to the <body> element along with color and background-color\r\n     */\r\n    useBodyStyles?: boolean;\r\n    /**\r\n     * Initializes the color mode based on the prefers-color-scheme media query\r\n     */\r\n    useColorSchemeMediaQuery?: boolean;\r\n    /**\r\n     * Adds a global box-sizing: border-box style\r\n     */\r\n    useBorderBox?: boolean;\r\n    /**\r\n     * If false, does not save color mode as a localStorage value.\r\n     */\r\n    useLocalStorage?: boolean;\r\n    /**\r\n     * Define the colors that are available through this theme\r\n     */\r\n    colors?: ColorMode & {\r\n        /**\r\n         * Nested color modes can provide overrides when used in conjunction with\r\n         * `Theme.initialColorModeName and `useColorMode()`\r\n         */\r\n        modes?: {\r\n            [k: string]: ColorMode;\r\n        };\r\n    };\r\n    /**\r\n     * Styles for elements rendered in MDX can be added to the theme.styles\r\n     * object. This is the primary, low-level way to control typographic and\r\n     * other styles in markdown content. Styles within this object are processed\r\n     * with @styled-system/css and have access to base theme values like colors,\r\n     * fonts, etc.\r\n     */\r\n    styles?: {\r\n        [P in StyledTags]?: SystemStyleObject;\r\n    };\r\n}\r\ndeclare type StyledTags = 'tr' | 'th' | 'td' | 'em' | 'strong' | 'div' | 'p' | 'b' | 'i' | 'a' | 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'img' | 'pre' | 'code' | 'ol' | 'ul' | 'li' | 'blockquote' | 'hr' | 'table' | 'delete' | 'inlineCode' | 'thematicBreak' | 'root';\r\nexport {};\r\n"}}
