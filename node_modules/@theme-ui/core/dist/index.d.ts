import { Theme } from '@theme-ui/css';
import React from 'react';
import './react-jsx';
export * from './types';
export declare const jsx: typeof React.createElement;
export interface ContextValue {
    __EMOTION_VERSION__: string;
    theme: Theme;
    colorMode?: string;
    setColorMode?: () => void;
}
export declare const Context: React.Context<ContextValue>;
export declare const useThemeUI: () => ContextValue;
/**
 * Deeply merge themes
 */
export declare const merge: {
    (a: Theme, b: Theme): Theme;
    all<T = Theme>(...args: Partial<T>[]): T;
};
interface BaseProviderProps {
    context: ContextValue;
}
export interface ThemeProviderProps {
    theme: Theme | ((outerTheme: Theme) => Theme);
    children?: React.ReactNode;
}
export declare function ThemeProvider({ theme, children }: ThemeProviderProps): React.FunctionComponentElement<BaseProviderProps>;
