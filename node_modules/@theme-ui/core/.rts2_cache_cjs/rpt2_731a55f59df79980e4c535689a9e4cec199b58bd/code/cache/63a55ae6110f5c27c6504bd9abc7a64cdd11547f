{"code":"//# sourceMappingURL=types.js.map","map":"{\"version\":3,\"file\":\"types.js\",\"sourceRoot\":\"\",\"sources\":[\"../../src/types.ts\"],\"names\":[],\"mappings\":\"\"}","dts":{"name":"/Users/jackson/theme-ui/packages/core/types.d.ts","writeByteOrderMark":false,"text":"/// <reference types=\"react\" />\r\nimport { SystemStyleObject } from '@theme-ui/css';\r\n/**\r\n * The `sx` prop accepts a `SxStyleProp` object and properties that are part of\r\n * the `Theme` will be transformed to their corresponding values. Other valid\r\n * CSS properties are also allowed.\r\n */\r\nexport declare type SxStyleProp = SystemStyleObject;\r\nexport interface SxProps {\r\n    /**\r\n     * The sx prop lets you style elements inline, using values from your\r\n     * theme. To use the sx prop, add the custom pragma as a comment to the\r\n     * top of your module and import the jsx function.\r\n     *\r\n     * ```ts\r\n     * // @jsx jsx\r\n     *\r\n     * import { jsx } from 'theme-ui'\r\n     * ```\r\n     */\r\n    sx?: SxStyleProp;\r\n}\r\nexport interface IntrinsicSxElements {\r\n    p: JSX.IntrinsicElements['p'] & SxProps;\r\n    b: JSX.IntrinsicElements['b'] & SxProps;\r\n    i: JSX.IntrinsicElements['i'] & SxProps;\r\n    a: JSX.IntrinsicElements['a'] & SxProps;\r\n    h1: JSX.IntrinsicElements['h1'] & SxProps;\r\n    h2: JSX.IntrinsicElements['h2'] & SxProps;\r\n    h3: JSX.IntrinsicElements['h3'] & SxProps;\r\n    h4: JSX.IntrinsicElements['h4'] & SxProps;\r\n    h5: JSX.IntrinsicElements['h5'] & SxProps;\r\n    h6: JSX.IntrinsicElements['h6'] & SxProps;\r\n    img: JSX.IntrinsicElements['img'] & SxProps;\r\n    pre: JSX.IntrinsicElements['pre'] & SxProps;\r\n    code: JSX.IntrinsicElements['code'] & SxProps;\r\n    ol: JSX.IntrinsicElements['ol'] & SxProps;\r\n    ul: JSX.IntrinsicElements['ul'] & SxProps;\r\n    li: JSX.IntrinsicElements['li'] & SxProps;\r\n    blockquote: JSX.IntrinsicElements['blockquote'] & SxProps;\r\n    hr: JSX.IntrinsicElements['hr'] & SxProps;\r\n    table: JSX.IntrinsicElements['table'] & SxProps;\r\n    tr: JSX.IntrinsicElements['tr'] & SxProps;\r\n    th: JSX.IntrinsicElements['th'] & SxProps;\r\n    td: JSX.IntrinsicElements['td'] & SxProps;\r\n    em: JSX.IntrinsicElements['em'] & SxProps;\r\n    strong: JSX.IntrinsicElements['strong'] & SxProps;\r\n    div: JSX.IntrinsicElements['div'] & SxProps;\r\n    delete: JSX.IntrinsicElements['div'] & SxProps;\r\n    inlineCode: JSX.IntrinsicElements['div'] & SxProps;\r\n    thematicBreak: JSX.IntrinsicElements['div'] & SxProps;\r\n    root: JSX.IntrinsicElements['div'] & SxProps;\r\n}\r\n"}}
