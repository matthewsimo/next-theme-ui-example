{"code":"import { jsx, useThemeUI, ThemeProvider as CoreProvider, } from '@theme-ui/core';\r\nimport { css } from '@theme-ui/css';\r\nimport { ColorModeProvider } from '@theme-ui/color-modes';\r\nimport { MDXProvider } from '@theme-ui/mdx';\r\nimport { Global } from '@emotion/core';\r\nconst BodyStyles = () => jsx(Global, {\r\n    styles: emotionTheme => {\r\n        const theme = emotionTheme;\r\n        if (theme.useBodyStyles === false ||\r\n            (theme.styles && !theme.styles.root)) {\r\n            return false;\r\n        }\r\n        const boxSizing = theme.useBorderBox === false ? undefined : 'border-box';\r\n        return css({\r\n            '*': {\r\n                boxSizing,\r\n            },\r\n            body: {\r\n                margin: 0,\r\n                variant: 'styles.root',\r\n            },\r\n        })(theme);\r\n    },\r\n});\r\nexport const ThemeProvider = ({ theme, components, children, }) => {\r\n    const outer = useThemeUI();\r\n    if (typeof outer.setColorMode === 'function') {\r\n        return jsx(CoreProvider, { theme }, jsx(MDXProvider, {\r\n            components,\r\n            children,\r\n        }));\r\n    }\r\n    return jsx(CoreProvider, { theme }, jsx(ColorModeProvider, null, jsx(BodyStyles), jsx(MDXProvider, {\r\n        components,\r\n        children,\r\n    })));\r\n};\r\n//# sourceMappingURL=index.js.map","map":"{\"version\":3,\"file\":\"index.js\",\"sourceRoot\":\"\",\"sources\":[\"../../src/index.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,EACL,GAAG,EACH,UAAU,EACV,aAAa,IAAI,YAAY,GAG9B,MAAM,gBAAgB,CAAA;AACvB,OAAO,EAAE,GAAG,EAAS,MAAM,eAAe,CAAA;AAC1C,OAAO,EAAE,iBAAiB,EAAE,MAAM,uBAAuB,CAAA;AACzD,OAAO,EAAE,WAAW,EAAE,MAAM,eAAe,CAAA;AAC3C,OAAO,EAAE,MAAM,EAAE,MAAM,eAAe,CAAA;AAEtC,MAAM,UAAU,GAAG,GAAG,EAAE,CACtB,GAAG,CAAC,MAAM,EAAE;IACV,MAAM,EAAE,YAAY,CAAC,EAAE;QACrB,MAAM,KAAK,GAAG,YAAqB,CAAA;QACnC,IACE,KAAK,CAAC,aAAa,KAAK,KAAK;YAC7B,CAAC,KAAK,CAAC,MAAM,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,EACpC;YACA,OAAO,KAAK,CAAA;SACb;QACD,MAAM,SAAS,GAAG,KAAK,CAAC,YAAY,KAAK,KAAK,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,YAAY,CAAA;QAEzE,OAAO,GAAG,CAAC;YACT,GAAG,EAAE;gBACH,SAAS;aACV;YACD,IAAI,EAAE;gBACJ,MAAM,EAAE,CAAC;gBACT,OAAO,EAAE,aAAa;aACvB;SACF,CAAC,CAAC,KAAK,CAAC,CAAA;IACX,CAAC;CACF,CAAC,CAAA;AAcJ,MAAM,CAAC,MAAM,aAAa,GAAiC,CAAC,EAC1D,KAAK,EACL,UAAU,EACV,QAAQ,GACT,EAAE,EAAE;IACH,MAAM,KAAK,GAAG,UAAU,EAAE,CAAA;IAE1B,IAAI,OAAO,KAAK,CAAC,YAAY,KAAK,UAAU,EAAE;QAC5C,OAAO,GAAG,CACR,YAAY,EACZ,EAAE,KAAK,EAAE,EACT,GAAG,CAAC,WAAW,EAAE;YACf,UAAU;YACV,QAAQ;SACT,CAAC,CACH,CAAA;KACF;IAED,OAAO,GAAG,CACR,YAAY,EACZ,EAAE,KAAK,EAAE,EACT,GAAG,CACD,iBAAiB,EACjB,IAAI,EACJ,GAAG,CAAC,UAAU,CAAC,EACf,GAAG,CAAC,WAAW,EAAE;QACf,UAAU;QACV,QAAQ;KACT,CAAC,CACH,CACF,CAAA;AACH,CAAC,CAAA\"}","dts":{"name":"/Users/jackson/theme-ui/packages/theme-provider/index.d.ts","writeByteOrderMark":false,"text":"/// <reference types=\"react\" />\r\nimport { ThemeProviderProps as CoreThemeProviderProps, IntrinsicSxElements } from '@theme-ui/core';\r\ndeclare type ProvidedComponentsKnownKeys = {\r\n    [key in keyof IntrinsicSxElements]?: React.ComponentType<any> | string;\r\n};\r\nexport interface ProvidedComponents extends ProvidedComponentsKnownKeys {\r\n    [key: string]: React.ComponentType<any> | string | undefined;\r\n}\r\ninterface ThemeProviderProps extends Pick<CoreThemeProviderProps, 'theme'> {\r\n    children?: React.ReactNode;\r\n    components?: ProvidedComponents;\r\n}\r\nexport declare const ThemeProvider: React.FC<ThemeProviderProps>;\r\nexport {};\r\n"}}
